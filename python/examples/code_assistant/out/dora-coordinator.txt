2024-10-07T11:47:16.498383Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266ce-1b90-7c8c-9aef-d142e9a2d39c`
2024-10-07T11:52:25.524326Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266d2-d2b2-76f3-b5b2-f36cf671cccb`
2024-10-07T11:52:46.903716Z  INFO dora_coordinator: successfully send stop dataflow `019266d2-d2b2-76f3-b5b2-f36cf671cccb` to all daemons
2024-10-07T11:52:48.379550Z ERROR dora_coordinator::control: failed to send reply
2024-10-07T11:53:09.168669Z  INFO dora_coordinator: Received destroy command
2024-10-07T11:53:09.169277Z  INFO dora_coordinator: successfully send stop dataflow `019266ce-1b90-7c8c-9aef-d142e9a2d39c` to all daemons
2024-10-07T11:53:09.169665Z  INFO dora_coordinator: successfully destroyed daemon ``
2024-10-07T11:53:09.169790Z  INFO dora_coordinator: stopped
2024-10-07T11:53:17.737386Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266d3-9ea7-7782-a365-e515a17b1f14`
2024-10-07T11:57:38.802452Z  INFO dora_coordinator: successfully send stop dataflow `019266d3-9ea7-7782-a365-e515a17b1f14` to all daemons
2024-10-07T11:57:40.378978Z ERROR dora_coordinator::control: failed to send reply
2024-10-07T11:57:42.973197Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266d7-aabb-7fa1-954e-95601f598d83`
2024-10-07T12:00:15.363975Z  INFO dora_coordinator: successfully send stop dataflow `019266d7-aabb-7fa1-954e-95601f598d83` to all daemons
2024-10-07T12:00:17.004914Z ERROR dora_coordinator::control: failed to send reply
2024-10-07T12:00:32.356504Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266da-4062-712b-9331-dbc5b344a62c`
2024-10-07T12:04:00.920591Z  INFO dora_coordinator: successfully send stop dataflow `019266da-4062-712b-9331-dbc5b344a62c` to all daemons
2024-10-07T12:04:02.489365Z ERROR dora_coordinator::control: failed to send reply
2024-10-07T12:04:05.061205Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266dd-7f43-711f-84fa-73420d828bcb`
2024-10-07T12:08:09.290297Z  INFO dora_coordinator: successfully send stop dataflow `019266dd-7f43-711f-84fa-73420d828bcb` to all daemons
2024-10-07T12:09:17.341417Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266e2-431b-7dc7-b268-927c6ecd6c09`
2024-10-07T12:11:20.475645Z  INFO dora_coordinator: successfully send stop dataflow `019266e2-431b-7dc7-b268-927c6ecd6c09` to all daemons
2024-10-07T12:11:21.741780Z ERROR dora_coordinator::control: failed to send reply
2024-10-07T12:11:28.492808Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266e4-436b-77d2-ad35-6759c1062a7d`
2024-10-07T12:13:38.334659Z  INFO dora_coordinator: successfully send stop dataflow `019266e4-436b-77d2-ad35-6759c1062a7d` to all daemons
2024-10-07T12:13:47.093626Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266e6-60d4-7edb-8380-857b0826bdc8`
2024-10-07T12:13:53.365740Z ERROR dora_coordinator::control: failed to send reply
2024-10-07T12:13:55.507585Z  INFO dora_coordinator: Received destroy command
2024-10-07T12:13:55.508192Z  INFO dora_coordinator: successfully send stop dataflow `019266e6-60d4-7edb-8380-857b0826bdc8` to all daemons
2024-10-07T12:13:55.508774Z  INFO dora_coordinator: successfully destroyed daemon ``
2024-10-07T12:13:55.509006Z  INFO dora_coordinator: stopped
2024-10-07T12:14:08.941306Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266e6-b62b-78f9-8162-f457893255ce`
2024-10-07T12:15:54.250239Z  INFO dora_coordinator: successfully send stop dataflow `019266e6-b62b-78f9-8162-f457893255ce` to all daemons
2024-10-07T12:16:08.664500Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266e8-89d7-708d-a5b1-e051e8250fdc`
2024-10-07T12:16:49.161499Z  INFO dora_coordinator: successfully send stop dataflow `019266e8-89d7-708d-a5b1-e051e8250fdc` to all daemons
2024-10-07T12:16:50.585459Z ERROR dora_coordinator::control: failed to send reply
2024-10-07T12:16:53.259158Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266e9-3809-7e66-99cc-6125ab053cd7`
2024-10-07T12:19:29.111157Z  INFO dora_coordinator: successfully send stop dataflow `019266e9-3809-7e66-99cc-6125ab053cd7` to all daemons
2024-10-07T12:19:30.711161Z ERROR dora_coordinator::control: failed to send reply
2024-10-07T12:19:35.012566Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266eb-afe3-79a2-b485-7205227289ee`
2024-10-07T12:22:29.690518Z  INFO dora_coordinator: successfully send stop dataflow `019266eb-afe3-79a2-b485-7205227289ee` to all daemons
2024-10-07T12:22:31.414476Z ERROR dora_coordinator::control: failed to send reply
2024-10-07T12:22:33.843934Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266ee-6a72-709f-b90b-163a7f24752d`
2024-10-07T12:23:45.151019Z  INFO dora_coordinator: successfully send stop dataflow `019266ee-6a72-709f-b90b-163a7f24752d` to all daemons
2024-10-07T12:23:51.375284Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266ef-994d-784c-ba62-a3fc1b726890`
2024-10-07T12:26:35.826526Z  INFO dora_coordinator: successfully send stop dataflow `019266ef-994d-784c-ba62-a3fc1b726890` to all daemons
2024-10-07T12:26:50.859241Z ERROR dora_coordinator::control: failed to send reply
2024-10-07T12:26:51.692323Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266f2-59aa-7960-a080-7dd91cc29b70`
2024-10-07T12:28:52.047401Z  INFO dora_coordinator: successfully send stop dataflow `019266f2-59aa-7960-a080-7dd91cc29b70` to all daemons
2024-10-07T12:28:53.665253Z ERROR dora_coordinator::control: failed to send reply
2024-10-07T12:29:14.249664Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266f4-8688-725f-9d0c-d7c4a1825c97`
2024-10-07T12:35:13.935085Z  INFO dora_coordinator: successfully send stop dataflow `019266f4-8688-725f-9d0c-d7c4a1825c97` to all daemons
2024-10-07T12:35:42.933744Z  INFO dora_coordinator: Received destroy command
2024-10-07T12:35:42.934330Z  INFO dora_coordinator: successfully destroyed daemon ``
2024-10-07T12:35:42.934482Z  INFO dora_coordinator: stopped
2024-10-07T12:35:58.346719Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `019266fa-b109-7f75-a124-7a6d581e0ba7`
2024-10-07T12:43:30.856236Z  INFO dora_coordinator: successfully send stop dataflow `019266fa-b109-7f75-a124-7a6d581e0ba7` to all daemons
2024-10-07T12:43:32.509610Z ERROR dora_coordinator::control: failed to send reply
2024-10-07T12:44:41.396463Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `01926702-ac33-7af4-919b-aa43b0fc376e`
2024-10-07T12:46:07.234255Z  INFO dora_coordinator: successfully send stop dataflow `01926702-ac33-7af4-919b-aa43b0fc376e` to all daemons
2024-10-07T12:46:09.091072Z ERROR dora_coordinator::control: failed to send reply
2024-10-07T12:46:25.553878Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("terminal-input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: Some("pip install -e ../../node-hub/terminal-input"), send_stdout_as: None, inputs: {DataId("node_results"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("code_assistant_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("code-assistant-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/main.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("output"): Input { mapping: User(UserInputMapping { source: NodeId("code-content-agent"), output: DataId("code_content_result") }), queue_size: None }, DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("terminal-input"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("code_assistant_result"), DataId("get_code")} }, Node { id: NodeId("code-content-agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("./scripts/content.py"), args: None, build: None, send_stdout_as: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("code-assistant-agent"), output: DataId("get_code") }), queue_size: None }}, outputs: {DataId("code_content_result")} }] } working_dir="/home/sunny/mofa/python/examples/code_assistant"}: dora_coordinator::run: successfully spawned dataflow `01926704-4310-7573-8483-99aba044c449`
2024-10-07T12:50:36.928293Z  INFO dora_coordinator: successfully send stop dataflow `01926704-4310-7573-8483-99aba044c449` to all daemons
2024-10-07T12:50:38.559300Z ERROR dora_coordinator::control: failed to send reply
