2024-07-23T07:31:45.831733Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190de80-de24-73d1-84b9-1124bd41b272`
2024-07-23T07:44:47.544576Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190de8c-cbb7-79ac-a5fa-08d0be1aecd8`
2024-07-23T07:49:37.905921Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190de91-39f0-7822-8390-e53f8ffadf46`
2024-07-23T08:21:02.313664Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190dead-fae8-79a9-9817-8975435646e1`
2024-07-23T08:21:25.211345Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190deae-5459-7dbe-ba05-5b03f6c4ecac`
2024-07-23T08:25:30.671860Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190deb2-132e-7cd2-ab85-100330043cea`
2024-07-23T08:26:04.404970Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190deb2-96f3-7297-b812-bef33ff78a49`
2024-07-23T08:53:57.956030Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190decc-2042-752e-8ea7-215dbd266811`
2024-07-23T08:54:37.270126Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190decc-b9d4-7cf2-ade9-a1fde35c724e`
2024-07-23T08:54:59.236723Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190decd-0fa3-72b8-909b-97cff847eed5`
2024-07-23T08:57:26.318076Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190decf-4e2c-7a9e-8caf-63588166104f`
2024-07-23T09:02:35.474469Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190ded4-05d0-7672-8d62-4ad74ef54565`
2024-07-23T09:07:27.159168Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190ded8-7935-71c0-872d-478eff4bad57`
2024-07-23T09:17:11.225168Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190dee1-62b7-7102-baf5-4218e995fbd8`
2024-07-23T09:17:40.617685Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190dee1-d588-774a-8bc9-441957caf525`
2024-07-23T09:21:20.888295Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190dee5-31f6-7750-8240-70c01122d11b`
2024-07-23T09:22:17.355906Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190dee6-0e89-7298-97a9-0a13733407a0`
2024-07-23T09:25:36.101115Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190dee9-16e3-742e-8d1e-8b3228f2cea4`
2024-07-23T09:29:05.426451Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190deec-488f-7560-9bde-73fc5744f0b9`
2024-07-24T01:03:53.813172Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190e244-1fd2-733f-a29a-4c55e251bd4f`
2024-07-24T01:04:13.911626Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190e244-6e56-72a5-9ff1-a909f98c27f5`
2024-07-24T01:05:19.579767Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190e245-6eda-7fe8-8803-69433dbe2dfe`
2024-07-24T01:06:39.738253Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190e246-a7f8-7943-9db4-603a80b6fed0`
2024-07-24T01:08:05.013334Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190e247-f513-72bd-8f80-8d8ac25ba789`
2024-07-24T01:10:07.631460Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190e249-d40d-78b3-b3e6-37f66c0c792c`
2024-07-24T01:55:44.074319Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190e273-9548-773b-b708-705813a08e3a`
2024-07-24T01:56:12.224950Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190e274-033f-77f8-a339-1e34154caa0f`
2024-07-24T01:56:41.775397Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190e274-76ad-7cf4-ad0b-74c87f754d8a`
2024-07-24T02:00:57.150166Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("loader"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("agent_config")}, source: Python(PythonSource { source: "reasoning_loader.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("agents"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("agent_config"): Input { mapping: User(UserInputMapping { source: NodeId("loader"), output: DataId("agent_config") }), queue_size: None }}, outputs: {DataId("result")}, source: Python(PythonSource { source: "reasoning_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("listener"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("result"): Input { mapping: User(UserInputMapping { source: NodeId("agents"), output: DataId("result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "listener.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/reasoner"}: dora_coordinator::run: successfully spawned dataflow `0190e278-5c3c-789f-9dcf-3a9449b819c9`
2024-07-24T06:17:02.963805Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("task_input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: None, send_stdout_as: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("task")} }, Node { id: NodeId("web_search_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("task_input"), output: DataId("task") }), queue_size: None }}, outputs: {DataId("web_search_result")}, source: Python(PythonSource { source: "web_search_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("more_question_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("web_search_result"): Input { mapping: User(UserInputMapping { source: NodeId("web_search_agent"), output: DataId("web_search_result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "more_question_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/super_agent/web_search"}: dora_coordinator::run: successfully spawned dataflow `0190e362-d2f2-7be0-96f5-b47dda29bb67`
2024-07-24T06:20:24.600063Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("task_input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: None, send_stdout_as: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("task")} }, Node { id: NodeId("web_search_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("task_input"), output: DataId("task") }), queue_size: None }}, outputs: {DataId("web_search_result")}, source: Python(PythonSource { source: "web_search_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("more_question_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("web_search_result"): Input { mapping: User(UserInputMapping { source: NodeId("web_search_agent"), output: DataId("web_search_result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "more_question_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/super_agent/web_search"}: dora_coordinator::run: successfully spawned dataflow `0190e365-e696-736f-9d35-265a2a7078cb`
2024-07-24T06:23:35.465249Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("task_input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: None, send_stdout_as: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("task")} }, Node { id: NodeId("web_search_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("task_input"), output: DataId("task") }), queue_size: None }}, outputs: {DataId("web_search_result")}, source: Python(PythonSource { source: "web_search_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("more_question_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("web_search_result"): Input { mapping: User(UserInputMapping { source: NodeId("web_search_agent"), output: DataId("web_search_result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "more_question_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/super_agent/web_search"}: dora_coordinator::run: successfully spawned dataflow `0190e368-d027-7b6f-b6d7-6aff089be346`
2024-07-24T06:24:35.187701Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("task_input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: None, send_stdout_as: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("task")} }, Node { id: NodeId("web_search_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("task_input"), output: DataId("task") }), queue_size: None }}, outputs: {DataId("web_search_result")}, source: Python(PythonSource { source: "web_search_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("more_question_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("web_search_result"): Input { mapping: User(UserInputMapping { source: NodeId("web_search_agent"), output: DataId("web_search_result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "more_question_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/super_agent/web_search"}: dora_coordinator::run: successfully spawned dataflow `0190e369-b972-7e29-80f3-c15e663efe26`
2024-07-24T06:33:51.573250Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("task_input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: None, send_stdout_as: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("task")} }, Node { id: NodeId("web_search_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("task_input"), output: DataId("task") }), queue_size: None }}, outputs: {DataId("web_search_result")}, source: Python(PythonSource { source: "web_search_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("more_question_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("web_search_result"): Input { mapping: User(UserInputMapping { source: NodeId("web_search_agent"), output: DataId("web_search_result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "more_question_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/super_agent/web_search"}: dora_coordinator::run: successfully spawned dataflow `0190e372-36d3-7c73-9786-73ce3158d79d`
2024-07-24T06:36:37.756091Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("task_input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: None, send_stdout_as: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("task")} }, Node { id: NodeId("web_search_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("task_input"), output: DataId("task") }), queue_size: None }}, outputs: {DataId("web_search_result")}, source: Python(PythonSource { source: "web_search_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("more_question_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("web_search_result"): Input { mapping: User(UserInputMapping { source: NodeId("web_search_agent"), output: DataId("web_search_result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "more_question_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/super_agent/web_search"}: dora_coordinator::run: successfully spawned dataflow `0190e374-bffa-71b2-b1bb-fe665ed3d408`
2024-07-24T06:37:36.949661Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("task_input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: None, send_stdout_as: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("task")} }, Node { id: NodeId("web_search_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("task_input"), output: DataId("task") }), queue_size: None }}, outputs: {DataId("web_search_result")}, source: Python(PythonSource { source: "web_search_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("more_question_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("web_search_result"): Input { mapping: User(UserInputMapping { source: NodeId("web_search_agent"), output: DataId("web_search_result") }), queue_size: None }}, outputs: {}, source: Python(PythonSource { source: "more_question_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/super_agent/web_search"}: dora_coordinator::run: successfully spawned dataflow `0190e375-a734-7809-b30a-411dd67ee9b5`
2024-07-24T09:10:05.971788Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("task_input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: None, send_stdout_as: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("task")} }, Node { id: NodeId("keyword_extractor"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("task_input"), output: DataId("task") }), queue_size: None }}, outputs: {DataId("keywords")}, source: Python(PythonSource { source: "keyword_extractor.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("paper_downloader_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("keywords"): Input { mapping: User(UserInputMapping { source: NodeId("keyword_extractor"), output: DataId("keywords") }), queue_size: None }}, outputs: {DataId("papers_info")}, source: Python(PythonSource { source: "paper_downloader_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("paper_analyze_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("papers_info"): Input { mapping: User(UserInputMapping { source: NodeId("paper_downloader_agent"), output: DataId("papers_info") }), queue_size: None }}, outputs: {DataId("paper_analyze_result")}, source: Python(PythonSource { source: "paper_analyze_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("report_writer_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("paper_analyze_result"): Input { mapping: User(UserInputMapping { source: NodeId("paper_analyze_agent"), output: DataId("paper_analyze_result") }), queue_size: None }}, outputs: {DataId("writer_report")}, source: Python(PythonSource { source: "report_writer_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("feedback_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("evaluation_result"): Input { mapping: User(UserInputMapping { source: NodeId("evaluation_agent"), output: DataId("evaluation_result") }), queue_size: None }, DataId("writer_report"): Input { mapping: User(UserInputMapping { source: NodeId("report_writer_agent"), output: DataId("writer_report") }), queue_size: None }}, outputs: {DataId("feedback_result")}, source: Python(PythonSource { source: "feedback_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("refinement_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("feedback_result"): Input { mapping: User(UserInputMapping { source: NodeId("feedback_agent"), output: DataId("feedback_result") }), queue_size: None }}, outputs: {DataId("refinement_result")}, source: Python(PythonSource { source: "refinement_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("evaluation_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("refinement_result"): Input { mapping: User(UserInputMapping { source: NodeId("refinement_agent"), output: DataId("refinement_result") }), queue_size: None }}, outputs: {DataId("evaluation_result")}, source: Python(PythonSource { source: "evaluation_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/super_agent/paper"}: dora_coordinator::run: successfully spawned dataflow `0190e401-4190-7e9e-bf94-320680555240`
2024-07-24T09:20:38.532879Z  INFO dora_coordinator: successfully send stop dataflow `0190e401-4190-7e9e-bf94-320680555240` to all daemons
2024-07-24T09:20:48.494891Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("task_input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: None, send_stdout_as: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("task")} }, Node { id: NodeId("keyword_extractor"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("task_input"), output: DataId("task") }), queue_size: None }}, outputs: {DataId("keywords")}, source: Python(PythonSource { source: "keyword_extractor.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("paper_downloader_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("keywords"): Input { mapping: User(UserInputMapping { source: NodeId("keyword_extractor"), output: DataId("keywords") }), queue_size: None }}, outputs: {DataId("papers_info")}, source: Python(PythonSource { source: "paper_downloader_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("paper_analyze_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("papers_info"): Input { mapping: User(UserInputMapping { source: NodeId("paper_downloader_agent"), output: DataId("papers_info") }), queue_size: None }}, outputs: {DataId("paper_analyze_result")}, source: Python(PythonSource { source: "paper_analyze_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("report_writer_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("paper_analyze_result"): Input { mapping: User(UserInputMapping { source: NodeId("paper_analyze_agent"), output: DataId("paper_analyze_result") }), queue_size: None }}, outputs: {DataId("writer_report")}, source: Python(PythonSource { source: "report_writer_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("feedback_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("evaluation_result"): Input { mapping: User(UserInputMapping { source: NodeId("evaluation_agent"), output: DataId("evaluation_result") }), queue_size: None }, DataId("writer_report"): Input { mapping: User(UserInputMapping { source: NodeId("report_writer_agent"), output: DataId("writer_report") }), queue_size: None }}, outputs: {DataId("feedback_result")}, source: Python(PythonSource { source: "feedback_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("refinement_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("feedback_result"): Input { mapping: User(UserInputMapping { source: NodeId("feedback_agent"), output: DataId("feedback_result") }), queue_size: None }}, outputs: {DataId("refinement_result")}, source: Python(PythonSource { source: "refinement_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("evaluation_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("refinement_result"): Input { mapping: User(UserInputMapping { source: NodeId("refinement_agent"), output: DataId("refinement_result") }), queue_size: None }}, outputs: {DataId("evaluation_result")}, source: Python(PythonSource { source: "evaluation_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/super_agent/paper"}: dora_coordinator::run: successfully spawned dataflow `0190e40b-0f6c-7a36-9705-97bf72a46bb3`
2024-07-24T09:21:50.871649Z  INFO dora_coordinator: successfully send stop dataflow `0190e40b-0f6c-7a36-9705-97bf72a46bb3` to all daemons
2024-07-24T09:21:55.555689Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("task_input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: None, send_stdout_as: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("task")} }, Node { id: NodeId("keyword_extractor"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("task_input"), output: DataId("task") }), queue_size: None }}, outputs: {DataId("keywords")}, source: Python(PythonSource { source: "keyword_extractor.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("paper_downloader_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("keywords"): Input { mapping: User(UserInputMapping { source: NodeId("keyword_extractor"), output: DataId("keywords") }), queue_size: None }}, outputs: {DataId("papers_info")}, source: Python(PythonSource { source: "paper_downloader_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("paper_analyze_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("papers_info"): Input { mapping: User(UserInputMapping { source: NodeId("paper_downloader_agent"), output: DataId("papers_info") }), queue_size: None }}, outputs: {DataId("paper_analyze_result")}, source: Python(PythonSource { source: "paper_analyze_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("report_writer_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("paper_analyze_result"): Input { mapping: User(UserInputMapping { source: NodeId("paper_analyze_agent"), output: DataId("paper_analyze_result") }), queue_size: None }}, outputs: {DataId("writer_report")}, source: Python(PythonSource { source: "report_writer_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("feedback_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("evaluation_result"): Input { mapping: User(UserInputMapping { source: NodeId("evaluation_agent"), output: DataId("evaluation_result") }), queue_size: None }, DataId("writer_report"): Input { mapping: User(UserInputMapping { source: NodeId("report_writer_agent"), output: DataId("writer_report") }), queue_size: None }}, outputs: {DataId("feedback_result")}, source: Python(PythonSource { source: "feedback_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("refinement_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("feedback_result"): Input { mapping: User(UserInputMapping { source: NodeId("feedback_agent"), output: DataId("feedback_result") }), queue_size: None }}, outputs: {DataId("refinement_result")}, source: Python(PythonSource { source: "refinement_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("evaluation_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("refinement_result"): Input { mapping: User(UserInputMapping { source: NodeId("refinement_agent"), output: DataId("refinement_result") }), queue_size: None }}, outputs: {DataId("evaluation_result")}, source: Python(PythonSource { source: "evaluation_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/super_agent/paper"}: dora_coordinator::run: successfully spawned dataflow `0190e40c-1560-7336-bf53-870e67f07dc1`
2024-07-25T02:15:53.454169Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("task_input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: None, send_stdout_as: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("task")} }, Node { id: NodeId("keyword_extractor"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("task_input"), output: DataId("task") }), queue_size: None }}, outputs: {DataId("keywords")}, source: Python(PythonSource { source: "keyword_extractor.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("paper_downloader_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("keywords"): Input { mapping: User(UserInputMapping { source: NodeId("keyword_extractor"), output: DataId("keywords") }), queue_size: None }}, outputs: {DataId("papers_info")}, source: Python(PythonSource { source: "paper_downloader_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("paper_analyze_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("papers_info"): Input { mapping: User(UserInputMapping { source: NodeId("paper_downloader_agent"), output: DataId("papers_info") }), queue_size: None }}, outputs: {DataId("paper_analyze_result")}, source: Python(PythonSource { source: "paper_analyze_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("report_writer_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("paper_analyze_result"): Input { mapping: User(UserInputMapping { source: NodeId("paper_analyze_agent"), output: DataId("paper_analyze_result") }), queue_size: None }}, outputs: {DataId("writer_report")}, source: Python(PythonSource { source: "report_writer_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("feedback_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("evaluation_result"): Input { mapping: User(UserInputMapping { source: NodeId("evaluation_agent"), output: DataId("evaluation_result") }), queue_size: None }, DataId("writer_report"): Input { mapping: User(UserInputMapping { source: NodeId("report_writer_agent"), output: DataId("writer_report") }), queue_size: None }}, outputs: {DataId("feedback_result")}, source: Python(PythonSource { source: "feedback_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("refinement_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("feedback_result"): Input { mapping: User(UserInputMapping { source: NodeId("feedback_agent"), output: DataId("feedback_result") }), queue_size: None }}, outputs: {DataId("refinement_result")}, source: Python(PythonSource { source: "refinement_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("evaluation_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("refinement_result"): Input { mapping: User(UserInputMapping { source: NodeId("refinement_agent"), output: DataId("refinement_result") }), queue_size: None }}, outputs: {DataId("evaluation_result")}, source: Python(PythonSource { source: "evaluation_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/super_agent/paper"}: dora_coordinator::run: successfully spawned dataflow `0190e7ac-656b-7077-b845-e266dc6d2799`
2024-07-25T02:22:36.466512Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("task_input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: None, send_stdout_as: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("task")} }, Node { id: NodeId("keyword_extractor"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("task_input"), output: DataId("task") }), queue_size: None }}, outputs: {DataId("keywords")}, source: Python(PythonSource { source: "keyword_extractor.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("paper_downloader_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("keywords"): Input { mapping: User(UserInputMapping { source: NodeId("keyword_extractor"), output: DataId("keywords") }), queue_size: None }}, outputs: {DataId("papers_info")}, source: Python(PythonSource { source: "paper_downloader_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("paper_analyze_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("papers_info"): Input { mapping: User(UserInputMapping { source: NodeId("paper_downloader_agent"), output: DataId("papers_info") }), queue_size: None }}, outputs: {DataId("paper_analyze_result")}, source: Python(PythonSource { source: "paper_analyze_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("report_writer_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("paper_analyze_result"): Input { mapping: User(UserInputMapping { source: NodeId("paper_analyze_agent"), output: DataId("paper_analyze_result") }), queue_size: None }}, outputs: {DataId("writer_report")}, source: Python(PythonSource { source: "report_writer_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("feedback_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("evaluation_result"): Input { mapping: User(UserInputMapping { source: NodeId("evaluation_agent"), output: DataId("evaluation_result") }), queue_size: None }, DataId("writer_report"): Input { mapping: User(UserInputMapping { source: NodeId("report_writer_agent"), output: DataId("writer_report") }), queue_size: None }}, outputs: {DataId("feedback_result")}, source: Python(PythonSource { source: "feedback_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("refinement_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("feedback_result"): Input { mapping: User(UserInputMapping { source: NodeId("feedback_agent"), output: DataId("feedback_result") }), queue_size: None }}, outputs: {DataId("refinement_result")}, source: Python(PythonSource { source: "refinement_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("evaluation_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("refinement_result"): Input { mapping: User(UserInputMapping { source: NodeId("refinement_agent"), output: DataId("refinement_result") }), queue_size: None }}, outputs: {DataId("evaluation_result")}, source: Python(PythonSource { source: "evaluation_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/super_agent/paper"}: dora_coordinator::run: successfully spawned dataflow `0190e7b2-8baf-7987-8148-b91feae6f7ba`
2024-07-25T03:02:11.925302Z  INFO spawn_dataflow{dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: Deploy { machine: None }, nodes: [Node { id: NodeId("task_input"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: None, path: Some("dynamic"), args: None, build: None, send_stdout_as: None, inputs: {DataId("direction"): Input { mapping: Timer { interval: 1s }, queue_size: None }}, outputs: {DataId("task")} }, Node { id: NodeId("keyword_extractor"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("task"): Input { mapping: User(UserInputMapping { source: NodeId("task_input"), output: DataId("task") }), queue_size: None }}, outputs: {DataId("keywords")}, source: Python(PythonSource { source: "keyword_extractor.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("paper_downloader_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("keywords"): Input { mapping: User(UserInputMapping { source: NodeId("keyword_extractor"), output: DataId("keywords") }), queue_size: None }}, outputs: {DataId("papers_info")}, source: Python(PythonSource { source: "paper_downloader_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("paper_analyze_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("papers_info"): Input { mapping: User(UserInputMapping { source: NodeId("paper_downloader_agent"), output: DataId("papers_info") }), queue_size: None }}, outputs: {DataId("paper_analyze_result")}, source: Python(PythonSource { source: "paper_analyze_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("report_writer_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("paper_analyze_result"): Input { mapping: User(UserInputMapping { source: NodeId("paper_analyze_agent"), output: DataId("paper_analyze_result") }), queue_size: None }}, outputs: {DataId("writer_report")}, source: Python(PythonSource { source: "report_writer_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("feedback_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("evaluation_result"): Input { mapping: User(UserInputMapping { source: NodeId("evaluation_agent"), output: DataId("evaluation_result") }), queue_size: None }, DataId("writer_report"): Input { mapping: User(UserInputMapping { source: NodeId("report_writer_agent"), output: DataId("writer_report") }), queue_size: None }}, outputs: {DataId("feedback_result")}, source: Python(PythonSource { source: "feedback_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("refinement_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("feedback_result"): Input { mapping: User(UserInputMapping { source: NodeId("feedback_agent"), output: DataId("feedback_result") }), queue_size: None }}, outputs: {DataId("refinement_result")}, source: Python(PythonSource { source: "refinement_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }, Node { id: NodeId("evaluation_agent"), name: None, description: None, env: None, deploy: Deploy { machine: None }, operators: None, custom: None, operator: Some(SingleOperatorDefinition { id: None, config: OperatorConfig { name: None, description: None, inputs: {DataId("refinement_result"): Input { mapping: User(UserInputMapping { source: NodeId("refinement_agent"), output: DataId("refinement_result") }), queue_size: None }}, outputs: {DataId("evaluation_result")}, source: Python(PythonSource { source: "evaluation_agent.py", conda_env: None }), build: None, send_stdout_as: None } }), path: None, args: None, build: None, send_stdout_as: None, inputs: {}, outputs: {} }] } working_dir="/Users/chenzi/project/zcbc/Moxin-App-Engine/mae/examples/agents/super_agent/paper"}: dora_coordinator::run: successfully spawned dataflow `0190e7d6-cad2-7621-a767-1f9951b7067b`
